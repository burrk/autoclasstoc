test_autoclasstoc:
  -
    id: baseline
    tmp_files:
      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]//td[last()]/p: Method docstring
  -
    id: inheritance
    tmp_files:

      index.rst:
        > .. autoclasstoc:: mock_project.Child

      mock_project.py:
        > class Parent:
        >     "Parent class docstring"
        >   
        >     def parent_method(self):
        >         "Parent method docstring"
        >
        > class Child(Parent):
        >     "Child class docstring"
        >
        >     def child_method(self):
        >         "Child method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]/table//td[1]/p: child_method\(\)
        //div[contains(@class,'autoclasstoc')]/table//td[2]/p: Child method docstring
        //div[contains(@class,'autoclasstoc')]/details/summary: Inherited from Parent
        //div[contains(@class,'autoclasstoc')]/details//td[1]/p: parent_method\(\)
        //div[contains(@class,'autoclasstoc')]/details//td[2]/p: Parent method docstring
  -
    id: inheritance-no-child-members
    tmp_files:

      index.rst:
        > .. autoclasstoc:: mock_project.Child

      mock_project.py:
        > class Parent:
        >     "Parent class docstring"
        >     
        >     def parent_method(self):
        >         "Parent method docstring"
        >
        > class Child(Parent):
        >     "Child class docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]/details/summary: Inherited from Parent
        //div[contains(@class,'autoclasstoc')]/details//td[1]/p: parent_method\(\)
        //div[contains(@class,'autoclasstoc')]/details//td[2]/p: Parent method docstring

    forbidden:
      index.html:
        - //div[contains(@class,'autoclasstoc')]/table
  -
    id: inheritance-no-parent-members
    tmp_files:

      index.rst:
        > .. autoclasstoc:: mock_project.Child

      mock_project.py:
        > class Parent:
        >     "Parent class docstring"
        >
        > class Child(Parent):
        >     "Child class docstring"
        >
        >     def child_method(self):
        >         "Child method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]/table//td[1]/p: child_method\(\)
        //div[contains(@class,'autoclasstoc')]/table//td[2]/p: Child method docstring

    forbidden:
      index.html:
        - //div[contains(@class,'autoclasstoc')]/details
  -
    id: directive-options-infer-class-from-autodoc
    tmp_files:
      index.rst:
        > .. autoclass:: mock_project.Class
        >
        >   .. autoclasstoc::

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]//td[last()]/p: Method docstring
  -
    id: directive-options-infer-class-from-py-domain
    tmp_files:
      index.rst:
        > .. py:module:: mock_project
        >
        > .. py:class:: Class
        > 
        >   .. autoclasstoc::

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]//td[last()]/p: Method docstring
  -
    id: directive-options-missing-class-name-error
    tmp_files:
      index.rst:
        > .. py:module:: mock_project
        >
        > .. autoclasstoc::

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    stderr:
      - .*WARNING: no class name
  -
    id: directive-options-missing-module-name-error
    tmp_files:
      index.rst:
        > .. py:class:: Class
        >
        >   .. autoclasstoc::

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    stderr:
      - .*WARNING: no module name
  -
    id: directive-options-sections
    tmp_files:
      conf.py:
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        > autoclasstoc_sections = []

      index.rst:
        > .. autoclasstoc:: mock_project.Class
        >   :sections: public-methods,private-methods

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def public_method(self):
        >         "Public method docstring"
        >
        >     def _private_method(self):
        >         "Private method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Public Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: public_method\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Public method docstring

        //div[contains(@class,'autoclasstoc')][2]/p: Private Methods
        //div[contains(@class,'autoclasstoc')][2]/table//td[1]/p: _private_method\(\)
        //div[contains(@class,'autoclasstoc')][2]/table//td[2]/p: Private method docstring
  -
    id: directive-options-exclude-sections
    tmp_files:
      conf.py:
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        > autoclasstoc_sections = [
        >     'public-methods',
        >     'private-methods',
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class
        >   :exclude-sections: public-methods

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def public_method(self):
        >         "Public method docstring"
        >
        >     def _private_method(self):
        >         "Private method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Private Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: _private_method\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Private method docstring
  -
    id: custom-section-name
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomMethods(PublicMethods):
        >     key = 'custom-methods'
        >     title = 'Custom Methods'
        >
        >     def predicate(self, name, attr, meta):
        >         return name.startswith('custom')
        >
        > class PublicMethods(PublicMethods):
        >     exclude_section = CustomMethods
        >
        > autoclasstoc_sections = [
        >     'custom-methods',
        >     'public-methods',
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"
        >
        >     def custom_method(self):
        >         "Custom method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Custom Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: custom_method\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Custom method docstring

        //div[contains(@class,'autoclasstoc')][2]/p: Public Methods
        //div[contains(@class,'autoclasstoc')][2]/table//td[1]/p: method\(\)
        //div[contains(@class,'autoclasstoc')][2]/table//td[2]/p: Method docstring
  -
    id: custom-section-attr
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomMethods(PublicMethods):
        >     key = 'custom-methods'
        >     title = 'Custom Methods'
        >
        >     def predicate(self, name, attr, meta):
        >         return getattr(attr, 'custom', False)
        >
        > class PublicMethods(PublicMethods):
        >     exclude_section = CustomMethods
        >
        > autoclasstoc_sections = [
        >     'custom-methods',
        >     'public-methods',
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > def custom(f):
        >     f.custom = True
        >     return f
        >
        > class Class:
        >     "Class docstring"
        >   
        >     @custom
        >     def method_1(self):
        >         "Method 1 docstring"
        >
        >     def method_2(self):
        >         "Method 2 docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Custom Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: method_1\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Method 1 docstring

        //div[contains(@class,'autoclasstoc')][2]/p: Public Methods
        //div[contains(@class,'autoclasstoc')][2]/table//td[1]/p: method_2\(\)
        //div[contains(@class,'autoclasstoc')][2]/table//td[2]/p: Method 2 docstring
  -
    id: custom-section-meta-key
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomMethods(PublicMethods):
        >     key = 'custom-methods'
        >     title = 'Custom Methods'
        >
        >     def predicate(self, name, attr, meta):
        >         return 'custom' in meta
        >
        > class PublicMethods(PublicMethods):
        >     exclude_section = CustomMethods
        >
        > autoclasstoc_sections = [
        >     'custom-methods',
        >     'public-methods',
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method_1(self):
        >         """
        >         Method 1 docstring
        >
        >         :meta custom:
        >         """
        >
        >     def method_2(self):
        >         "Method 2 docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Custom Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: method_1\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Method 1 docstring

        //div[contains(@class,'autoclasstoc')][2]/p: Public Methods
        //div[contains(@class,'autoclasstoc')][2]/table//td[1]/p: method_2\(\)
        //div[contains(@class,'autoclasstoc')][2]/table//td[2]/p: Method 2 docstring
  -
    id: custom-section-meta-value
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomMethods(PublicMethods):
        >     key = 'custom-methods'
        >     title = 'Custom Methods'
        >
        >     def predicate(self, name, attr, meta):
        >         return meta.get('section') == 'custom'
        >
        > class PublicMethods(PublicMethods):
        >     exclude_section = CustomMethods
        >
        > autoclasstoc_sections = [
        >     'custom-methods',
        >     'public-methods',
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method_1(self):
        >         """
        >         Method 1 docstring
        >
        >         :meta section: custom
        >         """
        >
        >     def method_2(self):
        >         "Method 2 docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')][1]/p: Custom Methods
        //div[contains(@class,'autoclasstoc')][1]/table//td[1]/p: method_1\(\)
        //div[contains(@class,'autoclasstoc')][1]/table//td[2]/p: Method 1 docstring

        //div[contains(@class,'autoclasstoc')][2]/p: Public Methods
        //div[contains(@class,'autoclasstoc')][2]/table//td[1]/p: method_2\(\)
        //div[contains(@class,'autoclasstoc')][2]/table//td[2]/p: Method 2 docstring
  -
    id: custom-section-exclude-inherited
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class PublicMethods(PublicMethods):
        >     include_inherited = False

      index.rst:
        > .. autoclasstoc:: mock_project.Child

      mock_project.py:
        > class Parent:
        >     "Parent class docstring"
        >   
        >     def parent_method(self):
        >         "Parent method docstring"
        >
        > class Child(Parent):
        >     "Child class docstring"
        >
        >     def child_method(self):
        >         "Child method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]/table//td[1]/p: child_method\(\)
        //div[contains(@class,'autoclasstoc')]/table//td[2]/p: Child method docstring

    forbidden:
      index.html:
        - //div[contains(@class,'autoclasstoc')]/details
  -
    id: custom-section-open-details-node
    tmp_files:
      conf.py:
        > from autoclasstoc import PublicMethods
        > from autoclasstoc.utils import make_inherited_details
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class OpenPublicMethods(PublicMethods):
        >     def _make_inherited_details(self, parent):
        >         return make_inherited_details(self.state, parent, True)

      index.rst:
        > .. autoclasstoc:: mock_project.Child

      mock_project.py:
        > class Parent:
        >     "Parent class docstring"
        >   
        >     def parent_method(self):
        >         "Parent method docstring"
        >
        > class Child(Parent):
        >     "Child class docstring"
        >
        >     def child_method(self):
        >       "Child method docstring"

    expected:
      index.html:
        //div[contains(@class,'autoclasstoc')]/p: Public Methods
        //div[contains(@class,'autoclasstoc')]/table//td[1]/p: child_method\(\)
        //div[contains(@class,'autoclasstoc')]/table//td[2]/p: Child method docstring
        //div[contains(@class,'autoclasstoc')]/details/@open: ^$
        //div[contains(@class,'autoclasstoc')]/details/summary: Inherited from Parent
        //div[contains(@class,'autoclasstoc')]/details//td[1]/p: parent_method\(\)
        //div[contains(@class,'autoclasstoc')]/details//td[2]/p: Parent method docstring
  -
    id: custom-section-missing-key-error
    tmp_files:
      conf.py:
        > from autoclasstoc import Section
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomSection(Section):
        >     pass
        >
        > autoclasstoc_sections = [
        >     CustomSection,
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    stderr:
      - .*WARNING: no key specified for 'CustomSection'
  -
    id: custom-section-missing-title-error
    tmp_files:
      conf.py:
        > from autoclasstoc import Section
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        >
        > class CustomSection(Section):
        >     key = 'custom-section'
        >
        > autoclasstoc_sections = [
        >     CustomSection,
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    stderr:
      - .*WARNING: no title specified for 'CustomSection'
  -
    id: custom-section-wrong-key-type
    tmp_files:
      conf.py:
        > from autoclasstoc import Section
        >
        > extensions = [
        >         'autoclasstoc',
        >         'sphinx.ext.autosummary',
        > ]
        > autoclasstoc_sections = [
        >     None,
        > ]

      index.rst:
        > .. autoclasstoc:: mock_project.Class

      mock_project.py:
        > class Class:
        >     "Class docstring"
        >   
        >     def method(self):
        >         "Method docstring"

    stderr:
      - .*WARNING: cannot interpret None as a section
